// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ecs

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeDedicatedHostsCommon = "DescribeDedicatedHosts"

// DescribeDedicatedHostsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDedicatedHostsCommon operation. The "output" return
// value will be populated with the DescribeDedicatedHostsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDedicatedHostsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDedicatedHostsCommon Send returns without error.
//
// See DescribeDedicatedHostsCommon for more information on using the DescribeDedicatedHostsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeDedicatedHostsCommonRequest method.
//    req, resp := client.DescribeDedicatedHostsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ECS) DescribeDedicatedHostsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDedicatedHostsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeDedicatedHostsCommon API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation DescribeDedicatedHostsCommon for usage and error information.
func (c *ECS) DescribeDedicatedHostsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDedicatedHostsCommonRequest(input)
	return out, req.Send()
}

// DescribeDedicatedHostsCommonWithContext is the same as DescribeDedicatedHostsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDedicatedHostsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) DescribeDedicatedHostsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDedicatedHostsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDedicatedHosts = "DescribeDedicatedHosts"

// DescribeDedicatedHostsRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDedicatedHosts operation. The "output" return
// value will be populated with the DescribeDedicatedHostsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDedicatedHostsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDedicatedHostsCommon Send returns without error.
//
// See DescribeDedicatedHosts for more information on using the DescribeDedicatedHosts
// API call, and error handling.
//
//    // Example sending a request using the DescribeDedicatedHostsRequest method.
//    req, resp := client.DescribeDedicatedHostsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ECS) DescribeDedicatedHostsRequest(input *DescribeDedicatedHostsInput) (req *request.Request, output *DescribeDedicatedHostsOutput) {
	op := &request.Operation{
		Name:       opDescribeDedicatedHosts,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDedicatedHostsInput{}
	}

	output = &DescribeDedicatedHostsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeDedicatedHosts API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation DescribeDedicatedHosts for usage and error information.
func (c *ECS) DescribeDedicatedHosts(input *DescribeDedicatedHostsInput) (*DescribeDedicatedHostsOutput, error) {
	req, out := c.DescribeDedicatedHostsRequest(input)
	return out, req.Send()
}

// DescribeDedicatedHostsWithContext is the same as DescribeDedicatedHosts with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDedicatedHosts for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) DescribeDedicatedHostsWithContext(ctx volcengine.Context, input *DescribeDedicatedHostsInput, opts ...request.Option) (*DescribeDedicatedHostsOutput, error) {
	req, out := c.DescribeDedicatedHostsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CapacityForDescribeDedicatedHostsOutput struct {
	_ struct{} `type:"structure"`

	AvailableMemory *int32 `type:"int32"`

	AvailableVcpus *int32 `type:"int32"`

	TotalMemory *int32 `type:"int32"`

	TotalVcpus *int32 `type:"int32"`
}

// String returns the string representation
func (s CapacityForDescribeDedicatedHostsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CapacityForDescribeDedicatedHostsOutput) GoString() string {
	return s.String()
}

// SetAvailableMemory sets the AvailableMemory field's value.
func (s *CapacityForDescribeDedicatedHostsOutput) SetAvailableMemory(v int32) *CapacityForDescribeDedicatedHostsOutput {
	s.AvailableMemory = &v
	return s
}

// SetAvailableVcpus sets the AvailableVcpus field's value.
func (s *CapacityForDescribeDedicatedHostsOutput) SetAvailableVcpus(v int32) *CapacityForDescribeDedicatedHostsOutput {
	s.AvailableVcpus = &v
	return s
}

// SetTotalMemory sets the TotalMemory field's value.
func (s *CapacityForDescribeDedicatedHostsOutput) SetTotalMemory(v int32) *CapacityForDescribeDedicatedHostsOutput {
	s.TotalMemory = &v
	return s
}

// SetTotalVcpus sets the TotalVcpus field's value.
func (s *CapacityForDescribeDedicatedHostsOutput) SetTotalVcpus(v int32) *CapacityForDescribeDedicatedHostsOutput {
	s.TotalVcpus = &v
	return s
}

type DedicatedHostForDescribeDedicatedHostsOutput struct {
	_ struct{} `type:"structure"`

	AutoPlacement *string `type:"string"`

	Capacity *CapacityForDescribeDedicatedHostsOutput `type:"structure"`

	ChargeType *string `type:"string"`

	CpuOvercommitRatio *float64 `type:"float"`

	CreatedAt *string `type:"string"`

	DedicatedHostClusterId *string `type:"string"`

	DedicatedHostId *string `type:"string"`

	DedicatedHostName *string `type:"string"`

	DedicatedHostTypeId *string `type:"string"`

	Description *string `type:"string"`

	ExpiredAt *string `type:"string"`

	HostRecovery *string `type:"string"`

	Instances []*InstanceForDescribeDedicatedHostsOutput `type:"list"`

	Status *string `type:"string"`

	UpdatedAt *string `type:"string"`

	ZoneId *string `type:"string"`
}

// String returns the string representation
func (s DedicatedHostForDescribeDedicatedHostsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DedicatedHostForDescribeDedicatedHostsOutput) GoString() string {
	return s.String()
}

// SetAutoPlacement sets the AutoPlacement field's value.
func (s *DedicatedHostForDescribeDedicatedHostsOutput) SetAutoPlacement(v string) *DedicatedHostForDescribeDedicatedHostsOutput {
	s.AutoPlacement = &v
	return s
}

// SetCapacity sets the Capacity field's value.
func (s *DedicatedHostForDescribeDedicatedHostsOutput) SetCapacity(v *CapacityForDescribeDedicatedHostsOutput) *DedicatedHostForDescribeDedicatedHostsOutput {
	s.Capacity = v
	return s
}

// SetChargeType sets the ChargeType field's value.
func (s *DedicatedHostForDescribeDedicatedHostsOutput) SetChargeType(v string) *DedicatedHostForDescribeDedicatedHostsOutput {
	s.ChargeType = &v
	return s
}

// SetCpuOvercommitRatio sets the CpuOvercommitRatio field's value.
func (s *DedicatedHostForDescribeDedicatedHostsOutput) SetCpuOvercommitRatio(v float64) *DedicatedHostForDescribeDedicatedHostsOutput {
	s.CpuOvercommitRatio = &v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *DedicatedHostForDescribeDedicatedHostsOutput) SetCreatedAt(v string) *DedicatedHostForDescribeDedicatedHostsOutput {
	s.CreatedAt = &v
	return s
}

// SetDedicatedHostClusterId sets the DedicatedHostClusterId field's value.
func (s *DedicatedHostForDescribeDedicatedHostsOutput) SetDedicatedHostClusterId(v string) *DedicatedHostForDescribeDedicatedHostsOutput {
	s.DedicatedHostClusterId = &v
	return s
}

// SetDedicatedHostId sets the DedicatedHostId field's value.
func (s *DedicatedHostForDescribeDedicatedHostsOutput) SetDedicatedHostId(v string) *DedicatedHostForDescribeDedicatedHostsOutput {
	s.DedicatedHostId = &v
	return s
}

// SetDedicatedHostName sets the DedicatedHostName field's value.
func (s *DedicatedHostForDescribeDedicatedHostsOutput) SetDedicatedHostName(v string) *DedicatedHostForDescribeDedicatedHostsOutput {
	s.DedicatedHostName = &v
	return s
}

// SetDedicatedHostTypeId sets the DedicatedHostTypeId field's value.
func (s *DedicatedHostForDescribeDedicatedHostsOutput) SetDedicatedHostTypeId(v string) *DedicatedHostForDescribeDedicatedHostsOutput {
	s.DedicatedHostTypeId = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *DedicatedHostForDescribeDedicatedHostsOutput) SetDescription(v string) *DedicatedHostForDescribeDedicatedHostsOutput {
	s.Description = &v
	return s
}

// SetExpiredAt sets the ExpiredAt field's value.
func (s *DedicatedHostForDescribeDedicatedHostsOutput) SetExpiredAt(v string) *DedicatedHostForDescribeDedicatedHostsOutput {
	s.ExpiredAt = &v
	return s
}

// SetHostRecovery sets the HostRecovery field's value.
func (s *DedicatedHostForDescribeDedicatedHostsOutput) SetHostRecovery(v string) *DedicatedHostForDescribeDedicatedHostsOutput {
	s.HostRecovery = &v
	return s
}

// SetInstances sets the Instances field's value.
func (s *DedicatedHostForDescribeDedicatedHostsOutput) SetInstances(v []*InstanceForDescribeDedicatedHostsOutput) *DedicatedHostForDescribeDedicatedHostsOutput {
	s.Instances = v
	return s
}

// SetStatus sets the Status field's value.
func (s *DedicatedHostForDescribeDedicatedHostsOutput) SetStatus(v string) *DedicatedHostForDescribeDedicatedHostsOutput {
	s.Status = &v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *DedicatedHostForDescribeDedicatedHostsOutput) SetUpdatedAt(v string) *DedicatedHostForDescribeDedicatedHostsOutput {
	s.UpdatedAt = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *DedicatedHostForDescribeDedicatedHostsOutput) SetZoneId(v string) *DedicatedHostForDescribeDedicatedHostsOutput {
	s.ZoneId = &v
	return s
}

type DescribeDedicatedHostsInput struct {
	_ struct{} `type:"structure"`

	DedicatedHostClusterId *string `type:"string"`

	DedicatedHostIds []*string `type:"list"`

	DedicatedHostName *string `type:"string"`

	DedicatedHostTypeId *string `type:"string"`

	MaxResults *int32 `type:"int32"`

	NextToken *string `type:"string"`

	Status *string `type:"string"`

	ZoneId *string `type:"string"`
}

// String returns the string representation
func (s DescribeDedicatedHostsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDedicatedHostsInput) GoString() string {
	return s.String()
}

// SetDedicatedHostClusterId sets the DedicatedHostClusterId field's value.
func (s *DescribeDedicatedHostsInput) SetDedicatedHostClusterId(v string) *DescribeDedicatedHostsInput {
	s.DedicatedHostClusterId = &v
	return s
}

// SetDedicatedHostIds sets the DedicatedHostIds field's value.
func (s *DescribeDedicatedHostsInput) SetDedicatedHostIds(v []*string) *DescribeDedicatedHostsInput {
	s.DedicatedHostIds = v
	return s
}

// SetDedicatedHostName sets the DedicatedHostName field's value.
func (s *DescribeDedicatedHostsInput) SetDedicatedHostName(v string) *DescribeDedicatedHostsInput {
	s.DedicatedHostName = &v
	return s
}

// SetDedicatedHostTypeId sets the DedicatedHostTypeId field's value.
func (s *DescribeDedicatedHostsInput) SetDedicatedHostTypeId(v string) *DescribeDedicatedHostsInput {
	s.DedicatedHostTypeId = &v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *DescribeDedicatedHostsInput) SetMaxResults(v int32) *DescribeDedicatedHostsInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *DescribeDedicatedHostsInput) SetNextToken(v string) *DescribeDedicatedHostsInput {
	s.NextToken = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DescribeDedicatedHostsInput) SetStatus(v string) *DescribeDedicatedHostsInput {
	s.Status = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *DescribeDedicatedHostsInput) SetZoneId(v string) *DescribeDedicatedHostsInput {
	s.ZoneId = &v
	return s
}

type DescribeDedicatedHostsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	DedicatedHosts []*DedicatedHostForDescribeDedicatedHostsOutput `type:"list"`

	NextToken *string `type:"string"`
}

// String returns the string representation
func (s DescribeDedicatedHostsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDedicatedHostsOutput) GoString() string {
	return s.String()
}

// SetDedicatedHosts sets the DedicatedHosts field's value.
func (s *DescribeDedicatedHostsOutput) SetDedicatedHosts(v []*DedicatedHostForDescribeDedicatedHostsOutput) *DescribeDedicatedHostsOutput {
	s.DedicatedHosts = v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *DescribeDedicatedHostsOutput) SetNextToken(v string) *DescribeDedicatedHostsOutput {
	s.NextToken = &v
	return s
}

type InstanceForDescribeDedicatedHostsOutput struct {
	_ struct{} `type:"structure"`

	InstanceId *string `type:"string"`

	InstanceTypeId *string `type:"string"`
}

// String returns the string representation
func (s InstanceForDescribeDedicatedHostsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceForDescribeDedicatedHostsOutput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *InstanceForDescribeDedicatedHostsOutput) SetInstanceId(v string) *InstanceForDescribeDedicatedHostsOutput {
	s.InstanceId = &v
	return s
}

// SetInstanceTypeId sets the InstanceTypeId field's value.
func (s *InstanceForDescribeDedicatedHostsOutput) SetInstanceTypeId(v string) *InstanceForDescribeDedicatedHostsOutput {
	s.InstanceTypeId = &v
	return s
}
