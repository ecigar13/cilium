// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ecs

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeDedicatedHostTypesCommon = "DescribeDedicatedHostTypes"

// DescribeDedicatedHostTypesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDedicatedHostTypesCommon operation. The "output" return
// value will be populated with the DescribeDedicatedHostTypesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDedicatedHostTypesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDedicatedHostTypesCommon Send returns without error.
//
// See DescribeDedicatedHostTypesCommon for more information on using the DescribeDedicatedHostTypesCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeDedicatedHostTypesCommonRequest method.
//    req, resp := client.DescribeDedicatedHostTypesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ECS) DescribeDedicatedHostTypesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDedicatedHostTypesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeDedicatedHostTypesCommon API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation DescribeDedicatedHostTypesCommon for usage and error information.
func (c *ECS) DescribeDedicatedHostTypesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDedicatedHostTypesCommonRequest(input)
	return out, req.Send()
}

// DescribeDedicatedHostTypesCommonWithContext is the same as DescribeDedicatedHostTypesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDedicatedHostTypesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) DescribeDedicatedHostTypesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDedicatedHostTypesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDedicatedHostTypes = "DescribeDedicatedHostTypes"

// DescribeDedicatedHostTypesRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDedicatedHostTypes operation. The "output" return
// value will be populated with the DescribeDedicatedHostTypesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDedicatedHostTypesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDedicatedHostTypesCommon Send returns without error.
//
// See DescribeDedicatedHostTypes for more information on using the DescribeDedicatedHostTypes
// API call, and error handling.
//
//    // Example sending a request using the DescribeDedicatedHostTypesRequest method.
//    req, resp := client.DescribeDedicatedHostTypesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ECS) DescribeDedicatedHostTypesRequest(input *DescribeDedicatedHostTypesInput) (req *request.Request, output *DescribeDedicatedHostTypesOutput) {
	op := &request.Operation{
		Name:       opDescribeDedicatedHostTypes,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDedicatedHostTypesInput{}
	}

	output = &DescribeDedicatedHostTypesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeDedicatedHostTypes API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation DescribeDedicatedHostTypes for usage and error information.
func (c *ECS) DescribeDedicatedHostTypes(input *DescribeDedicatedHostTypesInput) (*DescribeDedicatedHostTypesOutput, error) {
	req, out := c.DescribeDedicatedHostTypesRequest(input)
	return out, req.Send()
}

// DescribeDedicatedHostTypesWithContext is the same as DescribeDedicatedHostTypes with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDedicatedHostTypes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) DescribeDedicatedHostTypesWithContext(ctx volcengine.Context, input *DescribeDedicatedHostTypesInput, opts ...request.Option) (*DescribeDedicatedHostTypesOutput, error) {
	req, out := c.DescribeDedicatedHostTypesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DedicatedHostTypeForDescribeDedicatedHostTypesOutput struct {
	_ struct{} `type:"structure"`

	Cores *int32 `type:"int32"`

	DedicatedHostTypeId *string `type:"string"`

	IsSupportedCpuOvercommitRatio *bool `type:"boolean"`

	MaxCpuOvercommitRatio *float64 `type:"float"`

	ProcessorModel *string `type:"string"`

	Sockets *int32 `type:"int32"`

	SupportInstanceTypeFamilies []*string `type:"list"`

	SupportInstanceTypesList []*string `type:"list"`

	TotalMemory *int32 `type:"int32"`

	TotalVcpus *int32 `type:"int32"`
}

// String returns the string representation
func (s DedicatedHostTypeForDescribeDedicatedHostTypesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DedicatedHostTypeForDescribeDedicatedHostTypesOutput) GoString() string {
	return s.String()
}

// SetCores sets the Cores field's value.
func (s *DedicatedHostTypeForDescribeDedicatedHostTypesOutput) SetCores(v int32) *DedicatedHostTypeForDescribeDedicatedHostTypesOutput {
	s.Cores = &v
	return s
}

// SetDedicatedHostTypeId sets the DedicatedHostTypeId field's value.
func (s *DedicatedHostTypeForDescribeDedicatedHostTypesOutput) SetDedicatedHostTypeId(v string) *DedicatedHostTypeForDescribeDedicatedHostTypesOutput {
	s.DedicatedHostTypeId = &v
	return s
}

// SetIsSupportedCpuOvercommitRatio sets the IsSupportedCpuOvercommitRatio field's value.
func (s *DedicatedHostTypeForDescribeDedicatedHostTypesOutput) SetIsSupportedCpuOvercommitRatio(v bool) *DedicatedHostTypeForDescribeDedicatedHostTypesOutput {
	s.IsSupportedCpuOvercommitRatio = &v
	return s
}

// SetMaxCpuOvercommitRatio sets the MaxCpuOvercommitRatio field's value.
func (s *DedicatedHostTypeForDescribeDedicatedHostTypesOutput) SetMaxCpuOvercommitRatio(v float64) *DedicatedHostTypeForDescribeDedicatedHostTypesOutput {
	s.MaxCpuOvercommitRatio = &v
	return s
}

// SetProcessorModel sets the ProcessorModel field's value.
func (s *DedicatedHostTypeForDescribeDedicatedHostTypesOutput) SetProcessorModel(v string) *DedicatedHostTypeForDescribeDedicatedHostTypesOutput {
	s.ProcessorModel = &v
	return s
}

// SetSockets sets the Sockets field's value.
func (s *DedicatedHostTypeForDescribeDedicatedHostTypesOutput) SetSockets(v int32) *DedicatedHostTypeForDescribeDedicatedHostTypesOutput {
	s.Sockets = &v
	return s
}

// SetSupportInstanceTypeFamilies sets the SupportInstanceTypeFamilies field's value.
func (s *DedicatedHostTypeForDescribeDedicatedHostTypesOutput) SetSupportInstanceTypeFamilies(v []*string) *DedicatedHostTypeForDescribeDedicatedHostTypesOutput {
	s.SupportInstanceTypeFamilies = v
	return s
}

// SetSupportInstanceTypesList sets the SupportInstanceTypesList field's value.
func (s *DedicatedHostTypeForDescribeDedicatedHostTypesOutput) SetSupportInstanceTypesList(v []*string) *DedicatedHostTypeForDescribeDedicatedHostTypesOutput {
	s.SupportInstanceTypesList = v
	return s
}

// SetTotalMemory sets the TotalMemory field's value.
func (s *DedicatedHostTypeForDescribeDedicatedHostTypesOutput) SetTotalMemory(v int32) *DedicatedHostTypeForDescribeDedicatedHostTypesOutput {
	s.TotalMemory = &v
	return s
}

// SetTotalVcpus sets the TotalVcpus field's value.
func (s *DedicatedHostTypeForDescribeDedicatedHostTypesOutput) SetTotalVcpus(v int32) *DedicatedHostTypeForDescribeDedicatedHostTypesOutput {
	s.TotalVcpus = &v
	return s
}

type DescribeDedicatedHostTypesInput struct {
	_ struct{} `type:"structure"`

	DedicatedHostTypeIds []*string `type:"list"`

	MaxResults *int32 `type:"int32"`

	NextToken *string `type:"string"`

	SupportedInstanceTypeFamily *string `type:"string"`
}

// String returns the string representation
func (s DescribeDedicatedHostTypesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDedicatedHostTypesInput) GoString() string {
	return s.String()
}

// SetDedicatedHostTypeIds sets the DedicatedHostTypeIds field's value.
func (s *DescribeDedicatedHostTypesInput) SetDedicatedHostTypeIds(v []*string) *DescribeDedicatedHostTypesInput {
	s.DedicatedHostTypeIds = v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *DescribeDedicatedHostTypesInput) SetMaxResults(v int32) *DescribeDedicatedHostTypesInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *DescribeDedicatedHostTypesInput) SetNextToken(v string) *DescribeDedicatedHostTypesInput {
	s.NextToken = &v
	return s
}

// SetSupportedInstanceTypeFamily sets the SupportedInstanceTypeFamily field's value.
func (s *DescribeDedicatedHostTypesInput) SetSupportedInstanceTypeFamily(v string) *DescribeDedicatedHostTypesInput {
	s.SupportedInstanceTypeFamily = &v
	return s
}

type DescribeDedicatedHostTypesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	DedicatedHostTypes []*DedicatedHostTypeForDescribeDedicatedHostTypesOutput `type:"list"`

	NextToken *string `type:"string"`
}

// String returns the string representation
func (s DescribeDedicatedHostTypesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDedicatedHostTypesOutput) GoString() string {
	return s.String()
}

// SetDedicatedHostTypes sets the DedicatedHostTypes field's value.
func (s *DescribeDedicatedHostTypesOutput) SetDedicatedHostTypes(v []*DedicatedHostTypeForDescribeDedicatedHostTypesOutput) *DescribeDedicatedHostTypesOutput {
	s.DedicatedHostTypes = v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *DescribeDedicatedHostTypesOutput) SetNextToken(v string) *DescribeDedicatedHostTypesOutput {
	s.NextToken = &v
	return s
}
