// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ecs

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyInstanceVpcAttributeCommon = "ModifyInstanceVpcAttribute"

// ModifyInstanceVpcAttributeCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyInstanceVpcAttributeCommon operation. The "output" return
// value will be populated with the ModifyInstanceVpcAttributeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyInstanceVpcAttributeCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyInstanceVpcAttributeCommon Send returns without error.
//
// See ModifyInstanceVpcAttributeCommon for more information on using the ModifyInstanceVpcAttributeCommon
// API call, and error handling.
//
//	// Example sending a request using the ModifyInstanceVpcAttributeCommonRequest method.
//	req, resp := client.ModifyInstanceVpcAttributeCommonRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *ECS) ModifyInstanceVpcAttributeCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyInstanceVpcAttributeCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyInstanceVpcAttributeCommon API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation ModifyInstanceVpcAttributeCommon for usage and error information.
func (c *ECS) ModifyInstanceVpcAttributeCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyInstanceVpcAttributeCommonRequest(input)
	return out, req.Send()
}

// ModifyInstanceVpcAttributeCommonWithContext is the same as ModifyInstanceVpcAttributeCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyInstanceVpcAttributeCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) ModifyInstanceVpcAttributeCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyInstanceVpcAttributeCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyInstanceVpcAttribute = "ModifyInstanceVpcAttribute"

// ModifyInstanceVpcAttributeRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyInstanceVpcAttribute operation. The "output" return
// value will be populated with the ModifyInstanceVpcAttributeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyInstanceVpcAttributeCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyInstanceVpcAttributeCommon Send returns without error.
//
// See ModifyInstanceVpcAttribute for more information on using the ModifyInstanceVpcAttribute
// API call, and error handling.
//
//	// Example sending a request using the ModifyInstanceVpcAttributeRequest method.
//	req, resp := client.ModifyInstanceVpcAttributeRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *ECS) ModifyInstanceVpcAttributeRequest(input *ModifyInstanceVpcAttributeInput) (req *request.Request, output *ModifyInstanceVpcAttributeOutput) {
	op := &request.Operation{
		Name:       opModifyInstanceVpcAttribute,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyInstanceVpcAttributeInput{}
	}

	output = &ModifyInstanceVpcAttributeOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyInstanceVpcAttribute API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation ModifyInstanceVpcAttribute for usage and error information.
func (c *ECS) ModifyInstanceVpcAttribute(input *ModifyInstanceVpcAttributeInput) (*ModifyInstanceVpcAttributeOutput, error) {
	req, out := c.ModifyInstanceVpcAttributeRequest(input)
	return out, req.Send()
}

// ModifyInstanceVpcAttributeWithContext is the same as ModifyInstanceVpcAttribute with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyInstanceVpcAttribute for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) ModifyInstanceVpcAttributeWithContext(ctx volcengine.Context, input *ModifyInstanceVpcAttributeInput, opts ...request.Option) (*ModifyInstanceVpcAttributeOutput, error) {
	req, out := c.ModifyInstanceVpcAttributeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyInstanceVpcAttributeInput struct {
	_ struct{} `type:"structure"`

	ClientToken *string `type:"string"`

	InstanceId *string `type:"string"`

	PrimaryIpAddress *string `type:"string"`

	SecurityGroupIds []*string `type:"list"`

	SubnetId *string `type:"string"`

	VpcId *string `type:"string"`
}

// String returns the string representation
func (s ModifyInstanceVpcAttributeInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyInstanceVpcAttributeInput) GoString() string {
	return s.String()
}

// SetClientToken sets the ClientToken field's value.
func (s *ModifyInstanceVpcAttributeInput) SetClientToken(v string) *ModifyInstanceVpcAttributeInput {
	s.ClientToken = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *ModifyInstanceVpcAttributeInput) SetInstanceId(v string) *ModifyInstanceVpcAttributeInput {
	s.InstanceId = &v
	return s
}

// SetPrimaryIpAddress sets the PrimaryIpAddress field's value.
func (s *ModifyInstanceVpcAttributeInput) SetPrimaryIpAddress(v string) *ModifyInstanceVpcAttributeInput {
	s.PrimaryIpAddress = &v
	return s
}

// SetSecurityGroupIds sets the SecurityGroupIds field's value.
func (s *ModifyInstanceVpcAttributeInput) SetSecurityGroupIds(v []*string) *ModifyInstanceVpcAttributeInput {
	s.SecurityGroupIds = v
	return s
}

// SetSubnetId sets the SubnetId field's value.
func (s *ModifyInstanceVpcAttributeInput) SetSubnetId(v string) *ModifyInstanceVpcAttributeInput {
	s.SubnetId = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *ModifyInstanceVpcAttributeInput) SetVpcId(v string) *ModifyInstanceVpcAttributeInput {
	s.VpcId = &v
	return s
}

type ModifyInstanceVpcAttributeOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	NetworkInterfaceId *string `type:"string"`
}

// String returns the string representation
func (s ModifyInstanceVpcAttributeOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyInstanceVpcAttributeOutput) GoString() string {
	return s.String()
}

// SetNetworkInterfaceId sets the NetworkInterfaceId field's value.
func (s *ModifyInstanceVpcAttributeOutput) SetNetworkInterfaceId(v string) *ModifyInstanceVpcAttributeOutput {
	s.NetworkInterfaceId = &v
	return s
}
