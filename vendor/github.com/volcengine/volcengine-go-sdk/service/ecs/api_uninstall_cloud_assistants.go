// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ecs

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUninstallCloudAssistantsCommon = "UninstallCloudAssistants"

// UninstallCloudAssistantsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UninstallCloudAssistantsCommon operation. The "output" return
// value will be populated with the UninstallCloudAssistantsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UninstallCloudAssistantsCommon Request to send the API call to the service.
// the "output" return value is not valid until after UninstallCloudAssistantsCommon Send returns without error.
//
// See UninstallCloudAssistantsCommon for more information on using the UninstallCloudAssistantsCommon
// API call, and error handling.
//
//    // Example sending a request using the UninstallCloudAssistantsCommonRequest method.
//    req, resp := client.UninstallCloudAssistantsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ECS) UninstallCloudAssistantsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUninstallCloudAssistantsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// UninstallCloudAssistantsCommon API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation UninstallCloudAssistantsCommon for usage and error information.
func (c *ECS) UninstallCloudAssistantsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UninstallCloudAssistantsCommonRequest(input)
	return out, req.Send()
}

// UninstallCloudAssistantsCommonWithContext is the same as UninstallCloudAssistantsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UninstallCloudAssistantsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) UninstallCloudAssistantsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UninstallCloudAssistantsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUninstallCloudAssistants = "UninstallCloudAssistants"

// UninstallCloudAssistantsRequest generates a "volcengine/request.Request" representing the
// client's request for the UninstallCloudAssistants operation. The "output" return
// value will be populated with the UninstallCloudAssistantsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UninstallCloudAssistantsCommon Request to send the API call to the service.
// the "output" return value is not valid until after UninstallCloudAssistantsCommon Send returns without error.
//
// See UninstallCloudAssistants for more information on using the UninstallCloudAssistants
// API call, and error handling.
//
//    // Example sending a request using the UninstallCloudAssistantsRequest method.
//    req, resp := client.UninstallCloudAssistantsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ECS) UninstallCloudAssistantsRequest(input *UninstallCloudAssistantsInput) (req *request.Request, output *UninstallCloudAssistantsOutput) {
	op := &request.Operation{
		Name:       opUninstallCloudAssistants,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UninstallCloudAssistantsInput{}
	}

	output = &UninstallCloudAssistantsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// UninstallCloudAssistants API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation UninstallCloudAssistants for usage and error information.
func (c *ECS) UninstallCloudAssistants(input *UninstallCloudAssistantsInput) (*UninstallCloudAssistantsOutput, error) {
	req, out := c.UninstallCloudAssistantsRequest(input)
	return out, req.Send()
}

// UninstallCloudAssistantsWithContext is the same as UninstallCloudAssistants with the addition of
// the ability to pass a context and additional request options.
//
// See UninstallCloudAssistants for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) UninstallCloudAssistantsWithContext(ctx volcengine.Context, input *UninstallCloudAssistantsInput, opts ...request.Option) (*UninstallCloudAssistantsOutput, error) {
	req, out := c.UninstallCloudAssistantsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type FailedInstanceForUninstallCloudAssistantsOutput struct {
	_ struct{} `type:"structure"`

	ErrorMessage *string `type:"string"`

	Id *string `type:"string"`
}

// String returns the string representation
func (s FailedInstanceForUninstallCloudAssistantsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FailedInstanceForUninstallCloudAssistantsOutput) GoString() string {
	return s.String()
}

// SetErrorMessage sets the ErrorMessage field's value.
func (s *FailedInstanceForUninstallCloudAssistantsOutput) SetErrorMessage(v string) *FailedInstanceForUninstallCloudAssistantsOutput {
	s.ErrorMessage = &v
	return s
}

// SetId sets the Id field's value.
func (s *FailedInstanceForUninstallCloudAssistantsOutput) SetId(v string) *FailedInstanceForUninstallCloudAssistantsOutput {
	s.Id = &v
	return s
}

type UninstallCloudAssistantsInput struct {
	_ struct{} `type:"structure"`

	// InstanceIds is a required field
	InstanceIds []*string `type:"list" required:"true"`
}

// String returns the string representation
func (s UninstallCloudAssistantsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UninstallCloudAssistantsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UninstallCloudAssistantsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UninstallCloudAssistantsInput"}
	if s.InstanceIds == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceIds"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceIds sets the InstanceIds field's value.
func (s *UninstallCloudAssistantsInput) SetInstanceIds(v []*string) *UninstallCloudAssistantsInput {
	s.InstanceIds = v
	return s
}

type UninstallCloudAssistantsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	FailedInstances []*FailedInstanceForUninstallCloudAssistantsOutput `type:"list"`

	UninstallingInstanceIds []*string `type:"list"`
}

// String returns the string representation
func (s UninstallCloudAssistantsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UninstallCloudAssistantsOutput) GoString() string {
	return s.String()
}

// SetFailedInstances sets the FailedInstances field's value.
func (s *UninstallCloudAssistantsOutput) SetFailedInstances(v []*FailedInstanceForUninstallCloudAssistantsOutput) *UninstallCloudAssistantsOutput {
	s.FailedInstances = v
	return s
}

// SetUninstallingInstanceIds sets the UninstallingInstanceIds field's value.
func (s *UninstallCloudAssistantsOutput) SetUninstallingInstanceIds(v []*string) *UninstallCloudAssistantsOutput {
	s.UninstallingInstanceIds = v
	return s
}
